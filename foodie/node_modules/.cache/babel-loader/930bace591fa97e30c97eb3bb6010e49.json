{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  totalPrice: 0,\n  totalItemCount: 0,\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'totalPriceSlice',\n  initialState: initialCartState,\n  reducers: {\n    addItem(state, action) {\n      const reqItem = action.payload;\n\n      if (!state.cartItems.includes(action.payload)) {\n        state.cartItems.push(reqItem);\n      } else {\n        const currItem = state.cartItems.find(item => item === reqItem);\n        currItem.itemCount = currItem.itemCount + 1;\n      }\n\n      state.totalPrice = state.totalPrice + action.payload.itemPrice;\n      state.totalItemCount = state.totalItemCount + 1;\n    },\n\n    removeItem(state, action) {\n      const currItem = state.cartItems.find(item => item === action.payload);\n\n      if (currItem.itemCount === 1) {\n        state.cartItems = state.cartItems.filter(item => item !== action.payload);\n      } else {\n        currItem.itemCount = currItem.itemCount - 1;\n      }\n\n      state.totalPrice = state.totalPrice - currItem.itemPrice;\n      state.totalItemCount >= 1 ? state.totalItemCount = state.totalItemCount - 1 : state.totalItemCount = 0;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cartSlice: cartSlice.reducer\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/ravi/reactproject/foodie-work/foodie/src/store/index.js"],"names":["createSlice","configureStore","initialCartState","totalPrice","totalItemCount","cartItems","cartSlice","name","initialState","reducers","addItem","state","action","reqItem","payload","includes","push","currItem","find","item","itemCount","itemPrice","removeItem","filter","store","reducer","cartActions","actions"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,cAApB,QAAyC,kBAAzC;AAEA,MAAMC,gBAAgB,GAAC;AAACC,EAAAA,UAAU,EAAC,CAAZ;AAAcC,EAAAA,cAAc,EAAC,CAA7B;AAA+BC,EAAAA,SAAS,EAAC;AAAzC,CAAvB;AAEA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAC,iBADuB;AAE5BC,EAAAA,YAAY,EAACN,gBAFe;AAG5BO,EAAAA,QAAQ,EAAG;AACTC,IAAAA,OAAO,CAACC,KAAD,EAAOC,MAAP,EAAc;AACjB,YAAMC,OAAO,GAACD,MAAM,CAACE,OAArB;;AACA,UAAG,CAACH,KAAK,CAACN,SAAN,CAAgBU,QAAhB,CAAyBH,MAAM,CAACE,OAAhC,CAAJ,EAA6C;AAC3CH,QAAAA,KAAK,CAACN,SAAN,CAAgBW,IAAhB,CAAqBH,OAArB;AACD,OAFD,MAGI;AACF,cAAMI,QAAQ,GAACN,KAAK,CAACN,SAAN,CAAgBa,IAAhB,CAAqBC,IAAI,IAAEA,IAAI,KAAGN,OAAlC,CAAf;AACAI,QAAAA,QAAQ,CAACG,SAAT,GAAmBH,QAAQ,CAACG,SAAT,GAAmB,CAAtC;AACD;;AACDT,MAAAA,KAAK,CAACR,UAAN,GAAiBQ,KAAK,CAACR,UAAN,GAAiBS,MAAM,CAACE,OAAP,CAAeO,SAAjD;AACAV,MAAAA,KAAK,CAACP,cAAN,GAAqBO,KAAK,CAACP,cAAN,GAAqB,CAA1C;AACH,KAZQ;;AAaTkB,IAAAA,UAAU,CAACX,KAAD,EAAOC,MAAP,EAAc;AACtB,YAAMK,QAAQ,GAAGN,KAAK,CAACN,SAAN,CAAgBa,IAAhB,CAAqBC,IAAI,IAAEA,IAAI,KAAGP,MAAM,CAACE,OAAzC,CAAjB;;AACA,UAAGG,QAAQ,CAACG,SAAT,KAAqB,CAAxB,EAA0B;AACxBT,QAAAA,KAAK,CAACN,SAAN,GAAgBM,KAAK,CAACN,SAAN,CAAgBkB,MAAhB,CAAuBJ,IAAI,IAAEA,IAAI,KAAGP,MAAM,CAACE,OAA3C,CAAhB;AACD,OAFD,MAGI;AACFG,QAAAA,QAAQ,CAACG,SAAT,GAAmBH,QAAQ,CAACG,SAAT,GAAmB,CAAtC;AACD;;AACDT,MAAAA,KAAK,CAACR,UAAN,GAAiBQ,KAAK,CAACR,UAAN,GAAiBc,QAAQ,CAACI,SAA3C;AACAV,MAAAA,KAAK,CAACP,cAAN,IAAsB,CAAtB,GAAwBO,KAAK,CAACP,cAAN,GAAqBO,KAAK,CAACP,cAAN,GAAqB,CAAlE,GAAoEO,KAAK,CAACP,cAAN,GAAqB,CAAzF;AACD;;AAvBQ;AAHiB,CAAD,CAA7B;AA8BA,MAAMoB,KAAK,GAAGvB,cAAc,CAAC;AAC3BwB,EAAAA,OAAO,EAAC;AAACnB,IAAAA,SAAS,EAACA,SAAS,CAACmB;AAArB;AADmB,CAAD,CAA5B;AAIA,OAAO,MAAMC,WAAW,GAAGpB,SAAS,CAACqB,OAA9B;AAEP,eAAeH,KAAf","sourcesContent":["import {createSlice,configureStore} from \"@reduxjs/toolkit\";\n\nconst initialCartState={totalPrice:0,totalItemCount:0,cartItems:[]};\n\nconst cartSlice = createSlice({\n  name:'totalPriceSlice',\n  initialState:initialCartState,\n  reducers : {\n    addItem(state,action){\n        const reqItem=action.payload;\n        if(!state.cartItems.includes(action.payload)){\n          state.cartItems.push(reqItem);\n        }\n        else{\n          const currItem=state.cartItems.find(item=>item===reqItem);\n          currItem.itemCount=currItem.itemCount+1;\n        }\n        state.totalPrice=state.totalPrice+action.payload.itemPrice;\n        state.totalItemCount=state.totalItemCount+1;\n    },\n    removeItem(state,action){\n      const currItem = state.cartItems.find(item=>item===action.payload);\n      if(currItem.itemCount===1){\n        state.cartItems=state.cartItems.filter(item=>item!==action.payload);\n      }\n      else{\n        currItem.itemCount=currItem.itemCount-1;\n      }\n      state.totalPrice=state.totalPrice-currItem.itemPrice;\n      state.totalItemCount>=1?state.totalItemCount=state.totalItemCount-1:state.totalItemCount=0;\n    },\n  }\n});\n\nconst store = configureStore({\n  reducer:{cartSlice:cartSlice.reducer}\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}