{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  totalPrice: 0,\n  totalItemCount: 0,\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'totalPriceSlice',\n  initialState: initialCartState,\n  reducers: {\n    addItem(state, action) {\n      console.log(\"addItem called\");\n      const currItem = action.payload;\n\n      if (!state.cartItems.find(item => item.itemId === action.payload.itemId)) {\n        state.cartItems.push(currItem);\n      }\n\n      const reqItem = state.cartItems.find(item => item.itemId === action.payload.itemId);\n      console.log(reqItem.itemCount);\n      reqItem.itemCount = reqItem.itemCount + 1;\n      console.log(reqItem.itemCount);\n      state.totalPrice = state.totalPrice + action.payload.itemPrice;\n      state.totalItemCount = state.totalItemCount + 1;\n    },\n\n    removeItem(state, action) {\n      const currItem = state.cartItems.find(item => item.itemId === action.payload.itemId);\n\n      if (currItem.itemCount === 1) {\n        state.cartItems = state.cartItems.filter(item => item.itemId !== action.payload.itemId);\n      } else {\n        currItem.itemCount = currItem.itemCount - 1;\n      }\n\n      state.totalPrice = state.totalPrice - action.payload.itemPrice;\n      state.totalItemCount >= 1 ? state.totalItemCount = state.totalItemCount - 1 : state.totalItemCount = 0;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cartSlice: cartSlice.reducer\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/ravi/reactproject/foodie-work/foodie/src/store/index.js"],"names":["createSlice","configureStore","initialCartState","totalPrice","totalItemCount","cartItems","cartSlice","name","initialState","reducers","addItem","state","action","console","log","currItem","payload","find","item","itemId","push","reqItem","itemCount","itemPrice","removeItem","filter","store","reducer","cartActions","actions"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,cAApB,QAAyC,kBAAzC;AAEA,MAAMC,gBAAgB,GAAC;AAACC,EAAAA,UAAU,EAAC,CAAZ;AAAcC,EAAAA,cAAc,EAAC,CAA7B;AAA+BC,EAAAA,SAAS,EAAC;AAAzC,CAAvB;AAEA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAC,iBADuB;AAE5BC,EAAAA,YAAY,EAACN,gBAFe;AAG5BO,EAAAA,QAAQ,EAAG;AACTC,IAAAA,OAAO,CAACC,KAAD,EAAOC,MAAP,EAAc;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,YAAMC,QAAQ,GAACH,MAAM,CAACI,OAAtB;;AACA,UAAG,CAACL,KAAK,CAACN,SAAN,CAAgBY,IAAhB,CAAqBC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcP,MAAM,CAACI,OAAP,CAAeG,MAAxD,CAAJ,EAAoE;AAClER,QAAAA,KAAK,CAACN,SAAN,CAAgBe,IAAhB,CAAqBL,QAArB;AACD;;AAED,YAAMM,OAAO,GAACV,KAAK,CAACN,SAAN,CAAgBY,IAAhB,CAAqBC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcP,MAAM,CAACI,OAAP,CAAeG,MAAxD,CAAd;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYO,OAAO,CAACC,SAApB;AACAD,MAAAA,OAAO,CAACC,SAAR,GAAkBD,OAAO,CAACC,SAAR,GAAkB,CAApC;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYO,OAAO,CAACC,SAApB;AAEAX,MAAAA,KAAK,CAACR,UAAN,GAAiBQ,KAAK,CAACR,UAAN,GAAiBS,MAAM,CAACI,OAAP,CAAeO,SAAjD;AACAZ,MAAAA,KAAK,CAACP,cAAN,GAAqBO,KAAK,CAACP,cAAN,GAAqB,CAA1C;AACH,KAfQ;;AAgBToB,IAAAA,UAAU,CAACb,KAAD,EAAOC,MAAP,EAAc;AACpB,YAAMG,QAAQ,GAAGJ,KAAK,CAACN,SAAN,CAAgBY,IAAhB,CAAqBC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcP,MAAM,CAACI,OAAP,CAAeG,MAAxD,CAAjB;;AACA,UAAGJ,QAAQ,CAACO,SAAT,KAAqB,CAAxB,EAA0B;AACxBX,QAAAA,KAAK,CAACN,SAAN,GAAgBM,KAAK,CAACN,SAAN,CAAgBoB,MAAhB,CAAuBP,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcP,MAAM,CAACI,OAAP,CAAeG,MAA1D,CAAhB;AACD,OAFD,MAGI;AACFJ,QAAAA,QAAQ,CAACO,SAAT,GAAmBP,QAAQ,CAACO,SAAT,GAAmB,CAAtC;AACD;;AACDX,MAAAA,KAAK,CAACR,UAAN,GAAiBQ,KAAK,CAACR,UAAN,GAAiBS,MAAM,CAACI,OAAP,CAAeO,SAAjD;AACAZ,MAAAA,KAAK,CAACP,cAAN,IAAsB,CAAtB,GAAwBO,KAAK,CAACP,cAAN,GAAqBO,KAAK,CAACP,cAAN,GAAqB,CAAlE,GAAoEO,KAAK,CAACP,cAAN,GAAqB,CAAzF;AACH;;AA1BQ;AAHiB,CAAD,CAA7B;AAiCA,MAAMsB,KAAK,GAAGzB,cAAc,CAAC;AAC3B0B,EAAAA,OAAO,EAAC;AAACrB,IAAAA,SAAS,EAACA,SAAS,CAACqB;AAArB;AADmB,CAAD,CAA5B;AAIA,OAAO,MAAMC,WAAW,GAAGtB,SAAS,CAACuB,OAA9B;AAEP,eAAeH,KAAf","sourcesContent":["import {createSlice,configureStore} from \"@reduxjs/toolkit\";\n\nconst initialCartState={totalPrice:0,totalItemCount:0,cartItems:[]};\n\nconst cartSlice = createSlice({\n  name:'totalPriceSlice',\n  initialState:initialCartState,\n  reducers : {\n    addItem(state,action){\n        console.log(\"addItem called\");\n        const currItem=action.payload;\n        if(!state.cartItems.find(item=>item.itemId===action.payload.itemId)){\n          state.cartItems.push(currItem);\n        }\n\n        const reqItem=state.cartItems.find(item=>item.itemId===action.payload.itemId);\n        console.log(reqItem.itemCount);\n        reqItem.itemCount=reqItem.itemCount+1;\n        console.log(reqItem.itemCount);\n\n        state.totalPrice=state.totalPrice+action.payload.itemPrice;\n        state.totalItemCount=state.totalItemCount+1;\n    },\n    removeItem(state,action){\n        const currItem = state.cartItems.find(item=>item.itemId===action.payload.itemId);\n        if(currItem.itemCount===1){\n          state.cartItems=state.cartItems.filter(item=>item.itemId!==action.payload.itemId);\n        }\n        else{\n          currItem.itemCount=currItem.itemCount-1;\n        }\n        state.totalPrice=state.totalPrice-action.payload.itemPrice;\n        state.totalItemCount>=1?state.totalItemCount=state.totalItemCount-1:state.totalItemCount=0;\n    }\n  }\n});\n\nconst store = configureStore({\n  reducer:{cartSlice:cartSlice.reducer}\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}