{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  totalPrice: 0,\n  totalItemCount: 0,\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'totalPriceSlice',\n  reducers: {\n    addItem(state = {\n      totalPrice: 0,\n      totalItemCount: 0,\n      cartItems: []\n    }, action) {\n      if (!state.cartItems.includes(action.payload.item)) {\n        state.cartItems.push(action.payload.item);\n      }\n\n      state.totalPrice = state.totalPrice + action.payload.item.itemPrice;\n      state.totalItemCount = state.totalItemCount + 1;\n    },\n\n    removeItem(state = {\n      totalPrice: 0,\n      totalItemCount: 0,\n      cartItems: []\n    }, action) {\n      const currItem = state.cartItems.find(item => item === action.payload.item);\n\n      if (currItem.itemCount === 1) {\n        state.cartItems = state.cartItems.find(item => item !== action.payload.item);\n      }\n\n      state.totalPrice = state.totalPrice - currItem.itemPrice;\n      state.totalItemCount >= 1 ? state.totalItemCount = state.totalItemCount - 1 : state.totalItemCount = 0;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cartSlice: cartSlice.reducer\n  }\n});\nexport const cartActions = cartSlice.reducer;\nexport default store;","map":{"version":3,"sources":["/home/ravi/reactproject/foodie-work/foodie/src/store/index.js"],"names":["createSlice","configureStore","initialCartState","totalPrice","totalItemCount","cartItems","cartSlice","name","reducers","addItem","state","action","includes","payload","item","push","itemPrice","removeItem","currItem","find","itemCount","store","reducer","cartActions"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,cAApB,QAAyC,kBAAzC;AAEA,MAAMC,gBAAgB,GAAC;AAACC,EAAAA,UAAU,EAAC,CAAZ;AAAcC,EAAAA,cAAc,EAAC,CAA7B;AAA+BC,EAAAA,SAAS,EAAC;AAAzC,CAAvB;AAEA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAC,iBADuB;AAE5BC,EAAAA,QAAQ,EAAG;AACTC,IAAAA,OAAO,CAACC,KAAK,GAAC;AAACP,MAAAA,UAAU,EAAC,CAAZ;AAAcC,MAAAA,cAAc,EAAC,CAA7B;AAA+BC,MAAAA,SAAS,EAAC;AAAzC,KAAP,EAAoDM,MAApD,EAA2D;AAC9D,UAAG,CAACD,KAAK,CAACL,SAAN,CAAgBO,QAAhB,CAAyBD,MAAM,CAACE,OAAP,CAAeC,IAAxC,CAAJ,EAAkD;AAChDJ,QAAAA,KAAK,CAACL,SAAN,CAAgBU,IAAhB,CAAqBJ,MAAM,CAACE,OAAP,CAAeC,IAApC;AACD;;AACDJ,MAAAA,KAAK,CAACP,UAAN,GAAiBO,KAAK,CAACP,UAAN,GAAiBQ,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBE,SAAtD;AACAN,MAAAA,KAAK,CAACN,cAAN,GAAqBM,KAAK,CAACN,cAAN,GAAqB,CAA1C;AACH,KAPQ;;AAQTa,IAAAA,UAAU,CAACP,KAAK,GAAC;AAACP,MAAAA,UAAU,EAAC,CAAZ;AAAcC,MAAAA,cAAc,EAAC,CAA7B;AAA+BC,MAAAA,SAAS,EAAC;AAAzC,KAAP,EAAoDM,MAApD,EAA2D;AACnE,YAAMO,QAAQ,GAAGR,KAAK,CAACL,SAAN,CAAgBc,IAAhB,CAAqBL,IAAI,IAAEA,IAAI,KAAGH,MAAM,CAACE,OAAP,CAAeC,IAAjD,CAAjB;;AACA,UAAGI,QAAQ,CAACE,SAAT,KAAqB,CAAxB,EAA0B;AACxBV,QAAAA,KAAK,CAACL,SAAN,GAAgBK,KAAK,CAACL,SAAN,CAAgBc,IAAhB,CAAqBL,IAAI,IAAEA,IAAI,KAAGH,MAAM,CAACE,OAAP,CAAeC,IAAjD,CAAhB;AACD;;AACDJ,MAAAA,KAAK,CAACP,UAAN,GAAiBO,KAAK,CAACP,UAAN,GAAiBe,QAAQ,CAACF,SAA3C;AACAN,MAAAA,KAAK,CAACN,cAAN,IAAsB,CAAtB,GAAwBM,KAAK,CAACN,cAAN,GAAqBM,KAAK,CAACN,cAAN,GAAqB,CAAlE,GAAoEM,KAAK,CAACN,cAAN,GAAqB,CAAzF;AACD;;AAfQ;AAFiB,CAAD,CAA7B;AAqBA,MAAMiB,KAAK,GAAGpB,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAC;AAAChB,IAAAA,SAAS,EAACA,SAAS,CAACgB;AAArB;AADmB,CAAD,CAA5B;AAIA,OAAO,MAAMC,WAAW,GAAGjB,SAAS,CAACgB,OAA9B;AAEP,eAAeD,KAAf","sourcesContent":["import {createSlice,configureStore} from \"@reduxjs/toolkit\";\n\nconst initialCartState={totalPrice:0,totalItemCount:0,cartItems:[]};\n\nconst cartSlice = createSlice({\n  name:'totalPriceSlice',\n  reducers : {\n    addItem(state={totalPrice:0,totalItemCount:0,cartItems:[]},action){\n        if(!state.cartItems.includes(action.payload.item)){\n          state.cartItems.push(action.payload.item);\n        }\n        state.totalPrice=state.totalPrice+action.payload.item.itemPrice;\n        state.totalItemCount=state.totalItemCount+1;\n    },\n    removeItem(state={totalPrice:0,totalItemCount:0,cartItems:[]},action){\n      const currItem = state.cartItems.find(item=>item===action.payload.item);\n      if(currItem.itemCount===1){\n        state.cartItems=state.cartItems.find(item=>item!==action.payload.item);\n      }\n      state.totalPrice=state.totalPrice-currItem.itemPrice;\n      state.totalItemCount>=1?state.totalItemCount=state.totalItemCount-1:state.totalItemCount=0;\n    },\n  }\n});\n\nconst store = configureStore({\n  reducer:{cartSlice:cartSlice.reducer}\n});\n\nexport const cartActions = cartSlice.reducer;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}