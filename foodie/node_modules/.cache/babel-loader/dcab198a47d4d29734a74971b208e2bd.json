{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  totalPrice: 0,\n  totalItemCount: 0,\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'totalPriceSlice',\n  initialState: initialCartState,\n  reducers: {\n    addItem(state, action) {\n      console.log(\"addItem called\");\n      const currItem = action.payload;\n\n      if (!state.cartItems.find(item => item.itemId === action.payload.itemId)) {\n        console.log(\"inside first time\");\n        currItem[\"itemCount\"] = 5;\n        state.cartItems.push(currItem);\n      }\n\n      state.totalPrice = state.totalPrice + action.payload.itemPrice;\n      state.totalItemCount = state.totalItemCount + 1;\n    },\n\n    removeItem(state, action) {\n      const currItem = state.cartItems.find(item => item.itemId === action.payload.itemId);\n      console.log(\"currItem\", currItem);\n      state.cartItems = state.cartItems.filter(item => item !== action.payload);\n      state.totalPrice = state.totalPrice - action.payload.itemPrice;\n      state.totalItemCount >= 1 ? state.totalItemCount = state.totalItemCount - 1 : state.totalItemCount = 0;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cartSlice: cartSlice.reducer\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/ravi/reactproject/foodie-work/foodie/src/store/index.js"],"names":["createSlice","configureStore","initialCartState","totalPrice","totalItemCount","cartItems","cartSlice","name","initialState","reducers","addItem","state","action","console","log","currItem","payload","find","item","itemId","push","itemPrice","removeItem","filter","store","reducer","cartActions","actions"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,cAApB,QAAyC,kBAAzC;AAEA,MAAMC,gBAAgB,GAAC;AAACC,EAAAA,UAAU,EAAC,CAAZ;AAAcC,EAAAA,cAAc,EAAC,CAA7B;AAA+BC,EAAAA,SAAS,EAAC;AAAzC,CAAvB;AAEA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAC,iBADuB;AAE5BC,EAAAA,YAAY,EAACN,gBAFe;AAG5BO,EAAAA,QAAQ,EAAG;AACTC,IAAAA,OAAO,CAACC,KAAD,EAAOC,MAAP,EAAc;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,YAAMC,QAAQ,GAACH,MAAM,CAACI,OAAtB;;AACA,UAAG,CAACL,KAAK,CAACN,SAAN,CAAgBY,IAAhB,CAAqBC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcP,MAAM,CAACI,OAAP,CAAeG,MAAxD,CAAJ,EAAoE;AAClEN,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAC,QAAAA,QAAQ,CAAC,WAAD,CAAR,GAAsB,CAAtB;AACAJ,QAAAA,KAAK,CAACN,SAAN,CAAgBe,IAAhB,CAAqBL,QAArB;AACD;;AACDJ,MAAAA,KAAK,CAACR,UAAN,GAAiBQ,KAAK,CAACR,UAAN,GAAiBS,MAAM,CAACI,OAAP,CAAeK,SAAjD;AACAV,MAAAA,KAAK,CAACP,cAAN,GAAqBO,KAAK,CAACP,cAAN,GAAqB,CAA1C;AACH,KAXQ;;AAYTkB,IAAAA,UAAU,CAACX,KAAD,EAAOC,MAAP,EAAc;AACtB,YAAMG,QAAQ,GAAGJ,KAAK,CAACN,SAAN,CAAgBY,IAAhB,CAAqBC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcP,MAAM,CAACI,OAAP,CAAeG,MAAxD,CAAjB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,QAAvB;AACAJ,MAAAA,KAAK,CAACN,SAAN,GAAgBM,KAAK,CAACN,SAAN,CAAgBkB,MAAhB,CAAuBL,IAAI,IAAEA,IAAI,KAAGN,MAAM,CAACI,OAA3C,CAAhB;AACAL,MAAAA,KAAK,CAACR,UAAN,GAAiBQ,KAAK,CAACR,UAAN,GAAiBS,MAAM,CAACI,OAAP,CAAeK,SAAjD;AACAV,MAAAA,KAAK,CAACP,cAAN,IAAsB,CAAtB,GAAwBO,KAAK,CAACP,cAAN,GAAqBO,KAAK,CAACP,cAAN,GAAqB,CAAlE,GAAoEO,KAAK,CAACP,cAAN,GAAqB,CAAzF;AACD;;AAlBQ;AAHiB,CAAD,CAA7B;AAyBA,MAAMoB,KAAK,GAAGvB,cAAc,CAAC;AAC3BwB,EAAAA,OAAO,EAAC;AAACnB,IAAAA,SAAS,EAACA,SAAS,CAACmB;AAArB;AADmB,CAAD,CAA5B;AAIA,OAAO,MAAMC,WAAW,GAAGpB,SAAS,CAACqB,OAA9B;AAEP,eAAeH,KAAf","sourcesContent":["import {createSlice,configureStore} from \"@reduxjs/toolkit\";\n\nconst initialCartState={totalPrice:0,totalItemCount:0,cartItems:[]};\n\nconst cartSlice = createSlice({\n  name:'totalPriceSlice',\n  initialState:initialCartState,\n  reducers : {\n    addItem(state,action){\n        console.log(\"addItem called\");\n        const currItem=action.payload;\n        if(!state.cartItems.find(item=>item.itemId===action.payload.itemId)){\n          console.log(\"inside first time\");\n          currItem[\"itemCount\"]=5;\n          state.cartItems.push(currItem);\n        }\n        state.totalPrice=state.totalPrice+action.payload.itemPrice;\n        state.totalItemCount=state.totalItemCount+1;\n    },\n    removeItem(state,action){\n      const currItem = state.cartItems.find(item=>item.itemId===action.payload.itemId);\n      console.log(\"currItem\",currItem);\n      state.cartItems=state.cartItems.filter(item=>item!==action.payload);\n      state.totalPrice=state.totalPrice-action.payload.itemPrice;\n      state.totalItemCount>=1?state.totalItemCount=state.totalItemCount-1:state.totalItemCount=0;\n    }\n  }\n});\n\nconst store = configureStore({\n  reducer:{cartSlice:cartSlice.reducer}\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}